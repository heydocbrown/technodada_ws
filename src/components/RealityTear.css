/* Reality tears during navigation - beautiful corruption */

.reality-tear {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: 9999;
  pointer-events: none;
  overflow: hidden;
}

/* Glitch tear effect */
.reality-tear-glitch {
  background: rgba(0, 0, 0, 0.1);
}

.tear-scanlines {
  position: absolute;
  width: 100%;
  height: 100%;
  background: repeating-linear-gradient(
    0deg,
    rgba(0, 255, 0, 0.03),
    rgba(0, 255, 0, 0.03) 1px,
    transparent 1px,
    transparent 2px
  );
  animation: scanlines 0.1s linear infinite;
}

.tear-noise {
  position: absolute;
  width: 100%;
  height: 100%;
  background-image: url('data:image/svg+xml;utf8,<svg viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg"><filter id="noise"><feTurbulence type="fractalNoise" baseFrequency="0.9" numOctaves="4" /></filter><rect width="100%" height="100%" filter="url(%23noise)" opacity="0.1"/></svg>');
  opacity: 0.5;
  mix-blend-mode: multiply;
}

.glitch-slice {
  position: absolute;
  width: 100%;
  height: 33.33%;
  background: rgba(255, 0, 255, 0.1);
  mix-blend-mode: screen;
  animation: glitch-slide 0.2s ease-out;
}

/* Pixelate tear effect */
.tear-pixels {
  position: absolute;
  width: 100%;
  height: 100%;
}

.pixel-block {
  position: absolute;
  animation: pixel-appear 0.3s ease-out;
  mix-blend-mode: difference;
}

/* Temporal tear effect */
.tear-temporal {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.3);
  color: #00ff00;
  font-family: 'VT323', monospace;
}

.past-echo,
.future-echo {
  position: absolute;
  font-size: 2em;
  text-shadow: 0 0 10px currentColor;
  animation: time-glitch 0.3s ease-out;
}

.past-echo {
  top: 30%;
  color: #ff00ff;
  transform: translateX(-10px);
}

.future-echo {
  bottom: 30%;
  color: #00ffff;
  transform: translateX(10px);
}

.temporal-message {
  font-size: 1.5em;
  animation: blink 0.1s infinite;
}

/* Void tear effect */
.tear-void {
  background: radial-gradient(circle at center, transparent, rgba(0, 0, 0, 0.8));
  display: flex;
  justify-content: center;
  align-items: center;
}

.void-message {
  color: #ff0000;
  font-size: 2em;
  font-family: 'Space Mono', monospace;
  text-shadow: 0 0 20px currentColor;
  animation: void-pulse 0.3s ease-out;
}

.void-particle {
  position: absolute;
  width: 4px;
  height: 4px;
  background: #ff0000;
  border-radius: 50%;
  animation: void-float 0.5s ease-out forwards;
}

/* Cascade tear effect */
.tear-cascade {
  background: #000;
  position: relative;
}

.cascade-line {
  position: absolute;
  width: 2px;
  background: #00ff00;
  color: #00ff00;
  font-family: monospace;
  font-size: 12px;
  overflow: hidden;
  animation: cascade-fall 0.3s ease-out;
  text-orientation: upright;
  writing-mode: vertical-lr;
}

/* Static overlay for all tears */
.tear-static {
  position: absolute;
  width: 100%;
  height: 100%;
  opacity: 0.05;
  background: repeating-linear-gradient(
    45deg,
    transparent,
    transparent 1px,
    rgba(255, 255, 255, 0.03) 1px,
    rgba(255, 255, 255, 0.03) 2px
  );
  pointer-events: none;
}

/* Animations */
@keyframes scanlines {
  0% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(10px);
  }
}

@keyframes glitch-slide {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(var(--offset, 10px));
  }
}

@keyframes pixel-appear {
  0% {
    transform: scale(0) rotate(0deg);
    opacity: 1;
  }
  100% {
    transform: scale(1) rotate(90deg);
    opacity: 0;
  }
}

@keyframes time-glitch {
  0%,
  100% {
    opacity: 0.3;
  }
  50% {
    opacity: 0.8;
  }
}

@keyframes blink {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.3;
  }
}

@keyframes void-pulse {
  0% {
    transform: scale(0.8);
    opacity: 0;
  }
  50% {
    transform: scale(1.1);
    opacity: 1;
  }
  100% {
    transform: scale(1);
    opacity: 0.7;
  }
}

@keyframes void-float {
  0% {
    transform: translate(0, 0) scale(1);
    opacity: 1;
  }
  100% {
    transform: translate(
        calc(var(--random-x, 1) * 100px - 50px),
        calc(var(--random-y, 1) * 100px - 50px)
      )
      scale(0);
    opacity: 0;
  }
}

@keyframes cascade-fall {
  0% {
    transform: translateY(-100%);
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    transform: translateY(0);
    opacity: 0.5;
  }
}

/* Phase-based intensity */
.phase-1 {
  opacity: 0.3;
}
.phase-2 {
  opacity: 0.6;
}
.phase-3 {
  opacity: 0.9;
}

/* Deceptive route lies */
.reality-lie {
  position: fixed;
  top: 10px;
  right: 10px;
  background: rgba(255, 0, 0, 0.1);
  border: 1px solid #ff0000;
  color: #ff0000;
  padding: 5px 10px;
  font-family: monospace;
  font-size: 12px;
  z-index: 1000;
  animation: lie-flicker 2s infinite;
}

@keyframes lie-flicker {
  0%,
  100% {
    opacity: 0.3;
  }
  50% {
    opacity: 0.8;
  }
}

/* Dream redirect styling */
.dream-redirect {
  height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: #000;
  color: #00ff00;
  font-family: 'VT323', monospace;
}

.dream-redirect .glitch {
  font-size: 2em;
  animation: text-glitch 0.3s infinite;
}

.dream-redirect .whisper {
  font-size: 0.8em;
  opacity: 0.5;
  margin-top: 20px;
}

@keyframes text-glitch {
  0%,
  100% {
    text-shadow:
      2px 0 #ff00ff,
      -2px 0 #00ffff;
  }
  50% {
    text-shadow:
      -2px 0 #ff00ff,
      2px 0 #00ffff;
  }
}
